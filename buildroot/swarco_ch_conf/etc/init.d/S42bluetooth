#!/bin/sh
#*****************************************************************************/
#* 
#*  @file          S41bluetooth
#*
#*  Starts console connectivity for bluetooth interface
#*  
#*  @version       0.1
#*  @date          <2006-07-06 15:01:33 mf>
#*  @author        Markus Forster
#* 
#*  Changes:
#*    2006-12-20 gc: cleanup
#*    2006-07-06 mf: initial version
#*  
#****************************************************************************/

export KERNEL_VER=`uname -r`

# to enable bluetooth put a line like this in /etc/default/bluetooth:
#BLUETOOTH_SERVICES="modules hcid sdpd serial_port"
#BLUETOOTH_SERVICES="modules hcid sdpd dun_server"

if ! [ -f /etc/default/bluetooth ]
then
# bluetooth not configured, nothing to do
  exit 0
fi

BLUETOOTH_SERVICES=""
. /etc/init_common.sh
. /etc/default/bluetooth

if [ -r $MODULE_PATH/kernel/drivers/bluetooth/btusb.ko ] ; then
    bluetooth_mod_btusb=btusb
else
    bluetooth_mod_btusb=hci_usb
fi


ebegin()
{
        echo -n $*
}

eend()
{
	if [ "$1" -eq 0 ]; then
		echo -e '\tokay'
	else
		echo -e '\tFAILED'
	fi
}

start_modules() {
    ebegin "Loading Bluetooth modules"
    load_module kernel/lib/crc16
    load_module kernel/net/bluetooth/bluetooth
    load_module kernel/net/bluetooth/l2cap
    load_module kernel/net/bluetooth/rfcomm/rfcomm
    load_module kernel/drivers/bluetooth/$bluetooth_mod_btusb
    load_module kernel/net/bluetooth/bnep/bnep
    eend $?
}

stop_modules() {
    ebegin "Unloading Bluetooth modules"
    rmmod bnep
    rmmod $bluetooth_mod_btusb
    rmmod rfcomm
    rmmod l2cap
    rmmod bluetooth
    rmmod crc16
    eend $?
}

start_hcid() {
    ebegin "Starting Bluetooth hcid"
    [ -x /usr/sbin/hcid ] && \
        start-stop-daemon --start --quiet \
                --make-pidfile --pidfile /var/run/hcid.pid \
                --exec /usr/sbin/hcid -- \
		-f /etc/bluetooth/hcid.conf

    
    hciconfig hci0 up
    eend $?
}

stop_hcid() {
    ebegin "Shutting down Bluetooth hcid"
    [ -x /usr/sbin/hcid ] && \
        start-stop-daemon --stop --quiet \
	                --pidfile /var/run/hcid.pid \
	                --exec /usr/sbin/hcid
    eend $?
}

start_sdpd() {
    ebegin "Starting Bluetooth sdpd"
    [ -x /usr/sbin/sdpd ] && \
        start-stop-daemon --start --quiet \
                --make-pidfile --pidfile /var/run/sdpd.pid \
		--exec /usr/sbin/sdpd 

    eend $?
}

stop_sdpd() {
    ebegin "Shutting down Bluetooth sdpd"
    [ -x /usr/sbin/sdpd ] && \
        start-stop-daemon --stop --quiet \
                --pidfile /var/run/sdpd.pid \
		--exec /usr/sbin/sdpd
    eend $?
}


start_serial_port() {
    ebegin "Starting Bluetooth rfcomm serial port emulation"
    # start service discovery protocol demon and advertise "Serial Port"
    sdpd	
    #sdptool add SP

    


    DEV_IN=/dev/tts/1
    DEV_OUT=/dev/bluetooth/rfcomm/0 

    #stty -F $DEV_IN 4800 raw -cstopb -parenb

    #getty -L $DEV_IN 4800 xterm &

   # (while true; do rfcomm listen 0; done)&
   # (while true; do if [ -c $DEV_OUT ] ; then getty -L $DEV_OUT 4800 xterm; fi; sleep 10; done)&
    #(while true; do if [ -c $DEV_OUT ] ; then stty -F $DEV_OUT raw; fi; sleep 10; done)&
    eend $?
}

stop_serial_port() {
    ebegin "Shutting down Bluetooth rfcomm serial port emulation"
    killall rfcomm
    eend $?
}


start_pan_nap() {
    ebegin "Starting Bluetooth PAN NAP"
    [ -x /usr/bin/pand ] && \
        start-stop-daemon --start --quiet \
                --make-pidfile --pidfile /var/run/pand.pid \
		--exec /usr/bin/pand -- \
	        --listen --role NAP
    eend $?
}

stop_pan_nap() {
    ebegin "Shutting down Bluetooth PAN NAP"
    [ -x /usr/bin/pand ] && \
        start-stop-daemon --stop --quiet \
                --pidfile /var/run/pand.pid \
		--exec /usr/bin/pand
    eend $?
} 

start_dun_server() {
    local result
    ebegin "Starting Bluetooth DUN server"
    [ -x /usr/bin/dund ] && \
        start-stop-daemon --start --quiet \
                --make-pidfile --pidfile /var/run/dund.pid \
		--exec /usr/bin/dund -- \
	        --listen --msdun unit 1 call dun
    result=$?
    iptables -A INPUT -i ppp1 -j ACCEPT

#    ifconfig eth0 down
    eend $result
}

stop_dun_server() {
    ebegin "Shutting down Bluetooth DUN server"
    [ -x /usr/bin/dund ] && \
        start-stop-daemon --stop --quiet \
                --pidfile /var/run/dund.pid \
		--exec /usr/bin/dund
    eend $?
}

startup()
{
    


  start_network
}

stopit()
{
   stop_network
   
    killall sdpd
    killall rfcomm
}


bluetooth_stop_services=`echo $BLUETOOTH_SERVICES | 
	awk 'BEGIN { RS = " " } { r = $1 " " r; } END { print r }' `

case "$1" in
  start)
	for item in $BLUETOOTH_SERVICES
        do
          start_$item
        done
	;;

  stop)
	for item in $bluetooth_stop_services
        do
          stop_$item
        done
	;;

  restart|reload)
	for item in $bluetooth_stop_services
        do
          stop_$item
        done
	for item in $BLUETOOTH_SERVICES
        do
          start_$item
        done
	;;

  *)
	echo $"Usage: $0 {start|stop|restart}"
	exit 1
esac

# Local Variables:
# mode: shell-script
# backup-inhibited: t
# End:

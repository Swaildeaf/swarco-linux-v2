#!/bin/sh
#*****************************************************************************/
#* 
#*  @file          iptables.sh
#*
#*  Einfache Paketfilter-Regeln als Firewall für die Internet-Einwahl
#*  einrichten.  
#*
#*  Die Paketfilter-Regeln sollten geladen werden bevor die Netzwerkinterfaces
#*  initialisiert werden, damit sich keine kurzzeitigen Sicherheitslücken 
#*  ergeben.
#*
#*  @version       0.1
#*  @date          <2007-10-25 12:33:11 gc>
#*  @author        Guido Classen
#* 
#*  Changes:
#*    2007-01-11 gc: bugfix let incoming FIN packets pass!!!!
#*    2004-12-23 gc: initial version
#*  
#****************************************************************************/

case "$1" in
  start)
	# break
	;;
  stop)
  	exit 0
	;;
  restart|reload)
  	restart
	;;
  *)
	echo $"Usage: $0 {start|stop|restart}"
	exit 1
esac

. /etc/init_common.sh


echo "Setting up ip_tables packet filter"
load_module kernel/net/netfilter/x_tables
load_module kernel/net/netfilter/xt_tcpudp
load_module kernel/net/ipv4/netfilter/ip_tables
load_module kernel/net/ipv4/netfilter/iptable_filter

(
    PPP_IFACE=ppp0
    # 2004-12-22 gc: setup iptables packetfilter for internet connection
    #                over ppp interface (GPRS)
    #default policy: drop all packets
    iptables -P INPUT DROP

    # don't filter eth0 and loopback interface
    iptables -A INPUT -i eth0 -j ACCEPT
    iptables -A INPUT -i eth1 -j ACCEPT
    iptables -A INPUT -i lo -j ACCEPT   
    iptables -A INPUT -i usb0 -j ACCEPT

    # erlaube eingehende ICMP Pakete, ausser echo-request (ping)
    iptables -A INPUT -i $PPP_IFACE -p icmp --icmp-type ! echo-request -j ACCEPT
    # Eingehende Verbindungen auf die folgenden Ports zulassen:
    #  ssh:  Secure Shell Remotezugang
    #  7200: TLS-over-IP
    iptables -A INPUT -i $PPP_IFACE -p tcp --dport ssh -j ACCEPT
    iptables -A INPUT -i $PPP_IFACE -p tcp --dport 7200 -j ACCEPT

    # 2007-01-11 gc: Korrektur der Regel: Wir lassen alle ankommenden
    # TCP Pakete passieren, außer welche bei denen ausschließlich das
    # SYN Bit gesetzt ist (TCP-Verbindungsaufbau). 
    # Das bedeutet, dass SYN+ACK (Bestaetigung Verbindungsaufbau) sowie
    # RST und FIN (Verbindungsende) Pakete durchgelassen werden, sowie normale
    # Datenpakete!
    # Der lokale Port muss sich immer im unpriviligierten Bereich befinden!
    iptables -A INPUT -i $PPP_IFACE -p tcp --tcp-flags ! SYN,ACK,FIN,RST SYN --dport 1024:65535 -j ACCEPT

    # erlaube folgende eingehende UDP 
    # 

    # Antwort von DNS server
    iptables -A INPUT -i ppp0 -p udp --sport domain -j ACCEPT

    # Antwort vom NTP server
    iptables -A INPUT -i ppp0 -p udp --sport ntp -j ACCEPT

    # Alle priviligierten UDP Ports
    # iptables -A INPUT -i $PPP_IFACE -p udp --dport 1:1023 -j ACCEPT
)

# Local Variables:
# mode: shell-script
# time-stamp-pattern: "20/@date[\t ]+<%%>"
# backup-inhibited: t
# End:
